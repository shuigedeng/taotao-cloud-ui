# 工作流名称
name: assemble rn ios release

# 触发工作流程的事件
on:
  push:
    paths:
      - 'taotao-cloud-taro-mall/**'
    branches: [ master ]
    tags: [ v* ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

# 工作流环境变量
env:
  # 应用的application_id
  APP_ID: com.taro.demo
  APP_NAME: Taro Demo
  VERSION_NUMBER: 1.0.0
  BUILD_NUMBER: 1.0.0.0
  BUILD_TYPE: release
  TEAM_ID: XXXXXXXXXX
  PROVISIONING_PROFILE_SPECIFIER: Product_profile
  CODE_SIGN_IDENTITY: iPhone Distribution
  SIGNING_CERTIFICATE_P12_DATA: ${{secrets.RELEASE_SIGNING_CERTIFICATE_P12_DATA}}
  SIGNING_CERTIFICATE_PASSWORD: ${{secrets.RELEASE_SIGNING_CERTIFICATE_PASSWORD}}
  PROVISIONING_PROFILE_DATA: ${{secrets.RELEASE_PROVISIONING_PROFILE_DATA}}
  APP_STORE_CONNECT_USERNAME: ${{secrets.APP_STORE_CONNECT_USERNAME}}
  APP_STORE_CONNECT_PASSWORD: ${{secrets.APP_STORE_CONNECT_PASSWORD}}

defaults:
  run:
    working-directory: ./taotao-cloud-ui/taotao-cloud-taro-mall

jobs:
  assemble:
    runs-on: macos-11
    steps:
      - name: checkout project
        uses: actions/checkout@v4

      - name: cache node_modules folder
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node_modules
          restore-keys: ${{ runner.os }}-node_modules

      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache yarn
        uses: actions/cache@v3
        env:
          cache-name: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: cache pods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: install dependencies
        run: |
          yarn

      - name: build taro react native bundle
        run: |
          yarn build:rn --platform ios

      - name: upload taro react native bundle
        uses: actions/upload-artifact@v2
        with:
          name: taro-ios-bundle
          path: ${{ github.workspace }}/ios/main.jsbundle

      - name: install pods
        run: cd ios && pod update --no-repo-update

      - name: change react-native-xcode.sh
        run: |
          cd node_modules/react-native/scripts
          echo "exit 0;">react-native-xcode.sh

      - name: import signing certificate
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ env.SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ env.SIGNING_CERTIFICATE_PASSWORD }}
        run: |
          exec .github/scripts/import-certificate.sh

      - name: import provisioning profile
        env:
          PROVISIONING_PROFILE_DATA: ${{ env.PROVISIONING_PROFILE_DATA }}
        run: |
          exec .github/scripts/import-profile.sh

      - name: build app
        env:
          FL_APP_IDENTIFIER: ${{ env.APP_ID }}
          FL_UPDATE_PLIST_DISPLAY_NAME: ${{ env.APP_NAME }}
          FL_UPDATE_PLIST_PATH: taroDemo/Info.plist
          FL_VERSION_NUMBER_VERSION_NUMBER: ${{ env.VERSION_NUMBER }}
          FL_BUILD_NUMBER_BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
          FL_CODE_SIGN_IDENTITY: ${{ env.CODE_SIGN_IDENTITY }}
          FL_PROVISIONING_PROFILE_SPECIFIER: ${{ env.PROVISIONING_PROFILE_SPECIFIER }}
          FASTLANE_TEAM_ID: ${{ env.TEAM_ID }}
        run: |
          cd ios
          bundle update
          bundle exec fastlane build_release

      - name: upload ios products
        uses: actions/upload-artifact@v2
        with:
          name: app-${{ env.BUILD_TYPE }}
          path: |
            ${{ github.workspace }}/ios/taroDemo.ipa
            ${{ github.workspace }}/ios/taroDemo.app.dSYM.zip

      - name: upload app to app store connect
        env:
          APP_STORE_CONNECT_USERNAME: ${{ env.APP_STORE_CONNECT_USERNAME }}
          APP_STORE_CONNECT_PASSWORD: ${{ env.APP_STORE_CONNECT_PASSWORD }}
        run: |
          cd ios
          xcrun altool --upload-app -t ios -f "taroDemo.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"
